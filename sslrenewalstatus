#!/bin/bash
FULL_PATH_TO_SCRIPT="$(realpath "$0")"
SCRIPT_DIRECTORY="$(dirname "$FULL_PATH_TO_SCRIPT")"
# set env to get DOMAIN
if [ ! -f "/root/.env" ]; then
    echo "/root/.env does not exist."
    echo "env_example is template to use"
    exit 2
fi
source /root/.env
if [ -z ${gChat_url+x} ]; then echo "gChat_url must be set"; exit 5; fi
TODAY_DATE=$(date +%s)
mkdir -p "$DIR"
LOG="$DIR/ssl_renewal_report.log"
rm -rf "$LOG"
touch "$LOG"
echo "Success-" >> "$LOG"
echo "Warnings-" >> "$LOG"
echo "Critical-" >> "$LOG" 
rm -rf /gluster/@/api/lock/ssl_alerts/*
gsutil cp gs://certs_renewal_lock/renew_certs_hosts.lock /gluster/@/api/lock/ssl_alerts
for line in $(cat /gluster/@/api/lock/ssl_alerts/renew_certs_hosts.lock)
do
    HOST=$(echo $line | cut -d'-' -f-1)
    LAST_RENEWAL_DATE=$(echo "$line" | rev | cut -d'-' -f 1 | rev)
    TIME_DIFF=$((TODAY_DATE - LAST_RENEWAL_DATE))
    LAST_RAN=$((TIME_DIFF / 3600))
    LAST_RAN_IN_DAYS=$((LAST_RAN / 24))
    if [[ $LAST_RAN -le 24 ]]; then
        sed -i "/Success-/a $HOST: Certs Renewal process last run was $LAST_RAN hours ago" "$LOG"
        success="true"
    elif [[ $((TODAY_DATE - LAST_RENEWAL_DATE)) -gt 259200 ]]; then
        sed -i "/Critical-/a Critical - $HOST: Certs Renewal process last run was $LAST_RAN_IN_DAYS days ago" "$LOG"
        critical="true"        
    elif [[ $LAST_RAN -gt 36 ]]; then
        sed -i "/Warnings-/a Warning - $HOST: Certs Renewal process last run was $LAST_RAN_IN_DAYS days ago" "$LOG"
        warning="true"
    else
        echo "Error Parsing HOst"
        exit 1
    fi;
done
if [ -z "$success" ]
then
    sed -i "/Success/d" "$LOG"
fi    
if [ -z "$warning" ]
then
    sed -i "/Warnings/d" "$LOG"
fi   
if [ -z "$critical" ]
then
    sed -i "/Critical/d" "$LOG"
else
    gsutil cp  gs://certs_renewal_lock/renew_certs.lock .
    HOST=$(cat renew_certs.lock | cut -d'-' -f-1)
    LAST_RENEWAL_DATE=$(cat renew_certs.lock | rev | cut -d'-' -f 1 | rev)
    TIME_DIFF=$((TODAY_DATE - LAST_RENEWAL_DATE))
    LAST_RAN=$((TIME_DIFF / 3600))
    LAST_RAN_IN_DAYS=$((LAST_RAN / 24))
    sed -i "/Critical-/a Critical - $HOST: Holds the lock for $LAST_RAN_IN_DAYS days" "$LOG"
fi 
RESULTS=$(<"$LOG")
echo "$RESULTS"
curl --location --request POST "${gChat_url}" --header 'Content-Type: application/json' \
 --data-raw "{\"text\": \"SSl Renewal Status : \\n${RESULTS} \"}"
rm -rf "$LOG"
